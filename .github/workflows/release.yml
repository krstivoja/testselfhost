name: Build and Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  dist:
    name: "Build distribution release."
    runs-on: ubuntu-latest

    steps:
      - name: "Checks out the repository."
        uses: "actions/checkout@v2"

      - name: "Setup NodeJS."
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Updated Node.js version to LTS

      - name: "Cache NPM dependencies"
        id: cache-npm-deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: "Install NPM dependencies if package.json exists."
        if: steps.cache-npm-deps.outputs.cache-hit != 'true'
        run: |
          if [ -f package.json ]; then
            npm install
          else
            echo "No package.json file found, skipping npm install."
          fi

      - name: "Build release: Stable if package.json exists."
        run: |
          if [ -f package.json ]; then
            npm run build
          else
            echo "No package.json file found, skipping npm run build."
          fi

      - name: "Remove files based on .distignore"
        run: |
          if [ -f .distignore ]; then
            cat .distignore | xargs rm -rf
          else
            echo ".distignore file not found."
          fi

      - name: "Create a Release Archive"
        run: |
          zip -r test-selfhost.zip .

      - name: "Create a GitHub Release"
        uses: softprops/action-gh-release@v1
        with:
          files: test-selfhost.zip
        env:
          GITHUB_TOKEN: ${{ secrets.SELFHOST_TOKEN }}  # Ensure this token has the right permissions
